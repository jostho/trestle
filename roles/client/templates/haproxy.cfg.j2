global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode http
    option httplog clf
    option dontlognull
    timeout connect 5000
    timeout client  45000
    timeout server  45000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend stats-8000
    bind *:8000
    stats enable
    stats uri /stats
    stats refresh 15s

frontend http-80
    maxconn 2000
    bind *:80
    option forwardfor
    # capture for access log
    capture request header Host len 64
    capture request header User-Agent len 64
    # set host header for argocd client
    acl ua_argocd_client hdr_sub(user-agent) -i argocd-client
    http-request set-header host argocd.{{ dns_suffix }} if ua_argocd_client
    # route to traefik nodeport
    acl host_ingress hdr_sub(host) -i {{ dns_suffix }}
    use_backend traefik-nodeport-32080 if host_ingress
    # default backend
{% if metallb.enabled == true %}
    default_backend traefik-loadbalancer-80
{% else %}
    default_backend traefik-nodeport-32080
{% endif %}

{% if metallb.enabled == true %}
backend traefik-loadbalancer-80
    server {{ metallb.lb_ip.traefik }} {{ metallb.lb_ip.traefik }}:80 maxconn 200 check inter 5s
{% endif %}

backend traefik-nodeport-32080
{% for worker in groups['worker'] %}
    server {{ worker }} {{ worker }}:32080 maxconn 200 check inter 5s
{% endfor %}
